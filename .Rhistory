sigma_noise = .01
y = rnorm(n, X %*% w, sigma_noise)
plot(X[, 1], y)
plot(X[, 2], y)
plot(X[, 3], y)
X %*% w
dim(y)
length(y)
y = rnorm(1, X %*% w, sigma_noise)
y
d = 10
n = 1000
X = mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d)))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, (d-1)))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, rep(0, (d-1)))
sigma_noise = sqrt(1/10)
sigma_noise = .01
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
w
d = 10
n = 1000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
X
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, (d-1)))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, rep(0, (d-1)))
d = 10
n = 1000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, rep(0, d))
sigma_noise = sqrt(1/10)
sigma_noise = .01
y = rnorm(n, X %*% w, sigma_noise)
y
X[,1]
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 1, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .01
y = rnorm(n, X %*% w, sigma_noise)
y
plot(X[, 1], y)
plot(X[, 2], y)
plot(X[, 3], y)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
plogis(result$p)
d = 10
n = 1000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 1, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .01
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$m[1]
result$p
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
plogis(result$p)
d = 10
n = 10000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 1, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
plogis(result$p)
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 1, rep(0, d-1))
w
lengtH(w)
length(*w)
length(w)
X
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$m[,2]
result$m[2,]
result$m[1,]
result$p
plogis(result$p)
result$m
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = 1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
plogis(result$p)
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
plogis(result$p)
sigma_noise = .01
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
plogis(result$p)
d = 10
n = 1000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .01
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
# My own example ----------------------------------------------------------
d = 10
n = 1000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
plogis(result$p)
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
d = 10
n = 1000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = 1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
as.vector(result$m)
plot(result$m)
result$p
plogis(result$p)
y
plot(X[, 1], y)
plot(X[, 2], y)
v_slab = .1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(.1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
d = 10
n = 1000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = .1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 2, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
plogis(result$p)
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 1, rep(0, d-1))
sigma_noise = sqrt(1/10)
sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
d = 10
n = 1000
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = .1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 1, rep(0, d-1))
sigma_noise = sqrt(1/10)
# sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
sigma_noise
plot(X[, 2], y)
plot(X[, 3], y)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
d = 10
n = 100
X = cbind(1, mvtnorm::rmvnorm(n, rep(0, d), 5.*diag(d) + .5*rep(1, d) %*% t(rep(1, d))))
v_slab = .1
# z = rbinom(d, 1, p0)
z = c(1, rep(0, d))
# w = rep(0, d)
# w[z == 1] = rnorm(sum(z == 1), 0, sqrt(v_slab))
w = c(1, 1, rep(0, d-1))
sigma_noise = sqrt(1/10)
# sigma_noise = .1
y = rnorm(n, X %*% w, sigma_noise)
p0 = .1
weights = rep(1, n)
sigma0 = sqrt(1)
result = ep_wlr(X, y, weights, sigma0, p0, v_slab, max_iter = 2000)
result$m
result$p
optim
?optim
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
alpha
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
source('~/Research/ep_weighted_pseudolik/epwpl/R/ep_wlr.R')
